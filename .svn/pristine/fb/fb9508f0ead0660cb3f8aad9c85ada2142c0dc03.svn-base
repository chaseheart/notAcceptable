package com.isolver.controller;

import java.sql.Date;
import java.util.Calendar;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.isolver.common.config.AuthenticationFacade;
import com.isolver.common.constant.SysStatusCodeConst;
import com.isolver.common.util.JsonUtil;
import com.isolver.common.util.Result;
import com.isolver.dto.ServicePerformanceDto;
import com.isolver.dto.UserDto;
import com.isolver.entity.Holiday;
import com.isolver.entity.User;
import com.isolver.service.HolidayService;
import com.isolver.service.ServicePerformanceService;
import com.isolver.service.UserService;

/**
 * @author IS1907005
 * @date 2019/11/06
 * @class servicePerformanceController.java
 */

@RestController
@RequestMapping(value = "/servicePerformance")
public class ServicePerformanceController {

	private static final Logger logger = LoggerFactory.getLogger(ServicePerformanceController.class);

	@Autowired
	private UserService userService;
	@Autowired
	private ServicePerformanceService servicePerformanceService;
	@Autowired
	private HolidayService holidayService;

	/**
	 * 考勤初始化数据
	 * 
	 * @return
	 */
	@SuppressWarnings("deprecation")
	@RequestMapping(value = "/index", method = RequestMethod.GET)
	public ModelAndView servicePerformanceIndex() {
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.setViewName("servicePerformance");

		String workId = AuthenticationFacade.getUsername();
		User user = userService.getUserByLoginId(workId);
		Holiday holiday = holidayService.findOneMonth(user.getDeleteFlag(), 2019, 10);
		Calendar cal = Calendar.getInstance();
		int firstDay = cal.getMinimum(Calendar.DATE);
		int lastDay = cal.getActualMaximum(Calendar.DATE);
		Date dateStart = new Date(cal.get(Calendar.YEAR) - 1900, cal.get(Calendar.MONTH) - 1, firstDay);
		Date dateEnd = new Date(cal.get(Calendar.YEAR) - 1900, cal.get(Calendar.MONTH) - 1, lastDay);
		Map<String,ServicePerformanceDto> dtoList = servicePerformanceService.findservicePerformance(user, dateStart, dateEnd);
		modelAndView.addObject("username", JsonUtil.getJsonArray(new UserDto(user)));
		modelAndView.addObject("servicePerformance", JsonUtil.getJsonArray(dtoList));
		modelAndView.addObject("holiday", JsonUtil.getJsonArray(holiday));
		modelAndView.addObject("month", lastDay);
		return modelAndView;

	}

	/**
	 * 考勤实绩检索
	 * 
	 * @return
	 */
	@RequestMapping(value = "/findAllServicePerformance", method = RequestMethod.POST)
	public Result<Object> findAllServicePerformance(Integer oaYear, Integer oaMonth) {
		String workId = AuthenticationFacade.getUsername();
		User user = userService.getUserByLoginId(workId);
		Calendar cal = Calendar.getInstance();
		cal.set(Calendar.MONTH, oaMonth);
		cal.set(Calendar.YEAR, oaYear);
		int firstDay = cal.getMinimum(Calendar.DATE);
		int lastDay = cal.getActualMaximum(Calendar.DATE);
		Date dateStart = new Date(cal.get(Calendar.YEAR) - 1900, cal.get(Calendar.MONTH) - 1, firstDay);
		Date dateEnd = new Date(cal.get(Calendar.YEAR) - 1900, cal.get(Calendar.MONTH) - 1, lastDay);
		Map<String,ServicePerformanceDto> dtoList = servicePerformanceService.findservicePerformance(user, dateStart, dateEnd);
		return new Result<Object>(SysStatusCodeConst.SUCCESS, dtoList);

	}
}
