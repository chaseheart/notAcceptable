package com.isolver.dao.claimingExpenses;

import java.sql.Timestamp;
import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import com.isolver.dto.ApplicationDto;
import com.isolver.entity.ClaimingExpenses;
import com.isolver.entity.User;

/**
 * @author IS1907005
 * @date 2019/11/12
 * @class ClaimingExpensesRepository.java
 */
@Repository
public interface ClaimingExpensesRepository extends JpaRepository<ClaimingExpenses, Long> {

	public List<ClaimingExpenses> findByUserAndDeleteFlag(User user, Boolean deleteFlag);
	
	
	/**
	 * 检索自己提出的所有申请
	 * 
	 * @param startTime
	 * @param endTime
	 * @return
	 */
	@Query("select new com.isolver.dto.ApplicationDto(CONCAT(a.ruFlow.id,'' )as appId, CONCAT(a.type,'' ) as typeDetail,"
			+ " CONCAT(a.ruFlow.dealPeople.username,'' ) as assigner, "
			+ " CONCAT(a.content,'' ) as content )" + " from ClaimingExpenses a where a.insertTime Between :startTime and :endTime")
	public List<ApplicationDto> findApplicationDtoByUnusualAttendanceDateBetween(Timestamp startTime, Timestamp endTime);

}
