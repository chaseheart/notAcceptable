package com.isolver.common.util;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletOutputStream;

import org.apache.commons.lang3.StringUtils;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.springframework.stereotype.Service;

import com.isolver.dto.ServicePerformanceDto;

/**
 * @author IS1907005
 * @date 2019/11/11
 * @class ExcelUtil.java
 */
@Service
public class ExcelUtil {
	/**
	 * 加班记录 表头
	 * 
	 * @return
	 */
	public static List<List<String>> createOvertimeListStringHead() {
		// 模型上没有注解，表头数据动态传入
		List<List<String>> head = new ArrayList<List<String>>();

		List<String> headCoulumn1 = new ArrayList<String>();
		List<String> headCoulumn2 = new ArrayList<String>();
		List<String> headCoulumn3 = new ArrayList<String>();
		List<String> headCoulumn4 = new ArrayList<String>();
		List<String> headCoulumn5 = new ArrayList<String>();
		List<String> headCoulumn6 = new ArrayList<String>();
		List<String> headCoulumn7 = new ArrayList<String>();
		List<String> headCoulumn8 = new ArrayList<String>();
		List<String> headCoulumn9 = new ArrayList<String>();
		List<String> headCoulumn10 = new ArrayList<String>();
		List<String> headCoulumn11 = new ArrayList<String>();

		headCoulumn1.add("NO");
		headCoulumn1.add("NO");

		headCoulumn2.add("姓名");
		headCoulumn2.add("姓名");

		headCoulumn3.add("工号");
		headCoulumn3.add("工号");

		headCoulumn4.add("加班");
		headCoulumn4.add("日期");

		headCoulumn5.add("加班");
		headCoulumn5.add("小时");

		headCoulumn6.add("加班");
		headCoulumn6.add("共计");

		headCoulumn7.add("餐费补贴");
		headCoulumn7.add("饭贴");

		headCoulumn8.add("餐费补贴");
		headCoulumn8.add("金额");

		headCoulumn9.add("餐费补贴");
		headCoulumn9.add("合计");

		headCoulumn10.add("部门");
		headCoulumn10.add("部门");

		headCoulumn11.add("项目番号");
		headCoulumn11.add("项目番号");

		head.add(headCoulumn1);
		head.add(headCoulumn2);
		head.add(headCoulumn3);
		head.add(headCoulumn4);
		head.add(headCoulumn5);
		head.add(headCoulumn6);
		head.add(headCoulumn7);
		head.add(headCoulumn8);
		head.add(headCoulumn9);
		head.add(headCoulumn10);
		head.add(headCoulumn11);
		return head;
	}

	public void createAttendence(ServletOutputStream out, String date, String username, String workId, String depart, List<ServicePerformanceDto> dtoList, String restDay) throws IOException {
		File f = new File("C:\\Users\\is1907005\\Desktop\\modal.xls");

		InputStream inputStream = new FileInputStream(f);
		HSSFWorkbook xssfWorkbook = new HSSFWorkbook(inputStream);
		HSSFCellStyle blackStyle = xssfWorkbook.createCellStyle();
		blackStyle.setBorderBottom(BorderStyle.THIN);
		blackStyle.setBorderLeft(BorderStyle.THIN); // 设置边界的类型单元格的左边框
		blackStyle.setBorderRight(BorderStyle.THIN);
		blackStyle.setBorderTop(BorderStyle.THIN);
		HSSFCellStyle redStyle = xssfWorkbook.createCellStyle();
		redStyle.setBorderBottom(BorderStyle.THIN);
		redStyle.setBorderLeft(BorderStyle.THIN); // 设置边界的类型单元格的左边框
		redStyle.setBorderRight(BorderStyle.THIN);
		redStyle.setBorderTop(BorderStyle.THIN);
		// 生成一个字体
		HSSFFont font1 = xssfWorkbook.createFont();
		HSSFFont font2 = xssfWorkbook.createFont();
		// font.setColor(HSSFColor.BLACK.index);
		font1.setColor(IndexedColors.RED.getIndex());
		redStyle.setFont(font1);
		font2.setColor(IndexedColors.BLACK.getIndex());
		blackStyle.setFont(font2);
		// XSSFSheet xssfSheet = xssfWorkbook.getSheetAt(0); //如果是.xlsx文件使用这个
		HSSFSheet sheet1 = xssfWorkbook.getSheetAt(0);
		// 第2行第1列 日期
		sheet1.getRow(2).getCell(1).setCellValue(date);
		// 第2行第4列 日期
		sheet1.getRow(2).getCell(4).setCellValue(depart);
		// 第4行第2列 日期
		sheet1.getRow(3).getCell(2).setCellValue(username + "(" + workId + ")");
		// 行号
		int i = 0;
		for (ServicePerformanceDto s : dtoList) {
			String day = s.getDay().substring(5);
			sheet1.getRow(i + 8).getCell(1).setCellValue(day);
			// 判断是否休息日
			if (restDay.contains("\"" + day.split("-")[1] + "\"")) {
				sheet1.getRow(i + 8).getCell(2).setCellStyle(redStyle);
			} else {
				sheet1.getRow(i + 8).getCell(2).setCellStyle(blackStyle);

			}
			// 出勤日期
			sheet1.getRow(i + 8).getCell(2).setCellValue(Dateutil.dateToWeek(s.getDay()));
			// 勤务开始
			sheet1.getRow(i + 8).getCell(3).setCellValue(s.getOaStart());
			// 勤务结束
			sheet1.getRow(i + 8).getCell(4).setCellValue(s.getOaEnd());
			if (StringUtils.isEmpty(s.getOaStart()) && StringUtils.isEmpty(s.getOaEnd())) {
				sheet1.getRow(i + 8).getCell(5).setCellValue(s.getHour());
			}

			i++;
		}
		xssfWorkbook.write(out);
//		out.flush();
		out.close();
	}
}
