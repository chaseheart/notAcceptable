package com.isolver.service.wechat;

import java.util.List;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.isolver.common.constant.SysStaticConst;
import com.isolver.common.constant.SysStatusCodeConst;
import com.isolver.common.util.Dateutil;
import com.isolver.common.util.Result;
import com.isolver.common.util.StrUtil;
import com.isolver.dao.fileInfo.FileInfoRepository;
import com.isolver.dao.news.NewsRepository;
import com.isolver.dto.wechat.NewsDto;
import com.isolver.entity.FileInfo;
import com.isolver.entity.News;

@Service
public class NewsService {

	@Autowired
	private NewsRepository newsRepository;
	
	@Autowired
	private FileInfoRepository fileInfoRepository;

	/**
	 * 获得新闻/通知/贴士
	 * 
	 * @param type
	 * @return
	 */
	public List<News> getNewsList(Integer type) {
		List<News> resultList = newsRepository.findByTypeAndDeleteFlag(type, SysStaticConst.NOTDELE);
		return resultList;
	}

	/**
	 * 获得新闻/通知/贴士 详细
	 * 
	 * @param id
	 * @return
	 */
	public News getNewsDetail(Long id) {
		News news = newsRepository.findByIdAndDeleteFlag(id, SysStaticConst.NOTDELE);
		return news;
	}

	/**
	 * 获得新闻/通知/贴士
	 * 
	 * @param type
	 * @return
	 */
	public List<News> searchNews(String content, Integer type) {
		List<News> resultList = newsRepository.findByContent(content, type, SysStaticConst.NOTDELE);
		return resultList;
	}

	/**
	 * 获得新闻/通知/贴士
	 * 
	 * @param type
	 * @return
	 */
	public List<NewsDto> searchNotice(String content, String type) {
		content = StrUtil.strWithVague(content);
		List<NewsDto> resultList = newsRepository.getNoticeData(content, type, SysStaticConst.NOTDELE);
		return resultList;
	}
	
	/**
	 * 获得新闻/通知/贴士 详细
	 * 
	 * @param id
	 * @return
	 */
	public NewsDto getPCNewsDetail(Long id) {
		News news = newsRepository.findByIdAndDeleteFlag(id, SysStaticConst.NOTDELE);
		FileInfo file = new FileInfo();
		if(news.getPicId() != null) {
			file = fileInfoRepository.findOne(news.getPicId());
		}
		
		return new NewsDto(news, file);
	}

	/**
	 * 删除一条新闻
	 * 
	 * @return
	 */
	public Result<Object> deleteNews(Long newsId, Long userId) {
		News newsModel = newsRepository.findOne(newsId);
		News newsEntity = new News();
		BeanUtils.copyProperties(newsModel, newsEntity);
		newsEntity.setDeleteFlag(SysStaticConst.ISDELE);
		newsEntity.setUpdateUserId(userId);
		newsEntity.setUpdateTime(Dateutil.getTimestamp());
		newsRepository.saveAndFlush(newsEntity);
		return new Result<Object>(SysStatusCodeConst.SUCCESS);
	}

}
