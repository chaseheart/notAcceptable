package com.isolver.dao.oaFlowStep.impl;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;

import org.hibernate.SQLQuery;
import org.hibernate.transform.Transformers;

import com.isolver.dao.oaFlowStep.OaFlowStepRepositoryCustom;
import com.isolver.dto.SysUserDto;

/**
 * ·步骤-角色层级对应更新 查询
 * 
 * @author IS1907011
 * @date 2019/12/03
 * @class OaFlowStepRepository.java
 */
public class OaFlowStepRepositoryImpl implements OaFlowStepRepositoryCustom {
	@PersistenceContext
	private EntityManager entityManager;

	/**
	 * ·检索申请审批人(下一步审批人)
	 * 
	 * @param level    本人角色层级
	 * @param flowId   申请流程类型(流程id)
	 * @param departId 审批者部门id
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public List<SysUserDto> getNextStepUserList(Integer level, Long flowId, Long departId) {
		List<SysUserDto> userList = new ArrayList<>();
		String sql = " SELECT" //
				+ "  CONCAT(a.id, '') as id," //
				+ "  CONCAT(a.work_id, '') as workId," //
				+ "  CONCAT(a.username, '') as username,"//
				+ "  CONCAT(d.org, '') as org,"//
				+ "  CONCAT(a.depart, '') as depart,"//
				+ "  CONCAT(a.first_char,'') as firstChart"//
				+ "  FROM user a "//
				+ "      LEFT JOIN role R on a.role = R.id "//
				+ "      LEFT JOIN department d on a.depart = d.id "//
				+ "  WHERE R.level in ( "//
				+ "      SELECT MIN(O.role_level)"//
				+ "      FROM oa_flow_step O "//
				+ "      WHERE O.flow_state > ("//
				+ "         SELECT OFS.flow_state "//
				+ "         FROM oa_flow_step OFS "//
				+ "         WHERE OFS.role_level = :level "//
				+ "	        AND OFS.flow = :flowId"//
				+ "		 )"//
				+ "      AND O.flow = :flowId"//
				+ "  )";//
		if (departId != null) {
			sql += "  AND a.depart = :departId";//
		}
		Query query = entityManager.createNativeQuery(sql);
		query.setParameter("level", level);
		query.setParameter("flowId", flowId);
		if (departId != null) {
			query.setParameter("departId", departId);
		}
		query.unwrap(SQLQuery.class).setResultTransformer(Transformers.aliasToBean(SysUserDto.class));
		userList = query.getResultList();
		return userList;
	}
}
