package com.isolver.controller.wechat;

import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.isolver.common.constant.SysStatusCodeConst;
import com.isolver.common.util.Result;
import com.isolver.entity.ClaimingExpenses;
import com.isolver.entity.User;
import com.isolver.service.UserService;
import com.isolver.service.wechat.VerifyService;

@RestController
@RequestMapping(value = "/weixin")
public class VerifyController {

	private static final Logger logger = LoggerFactory.getLogger(VerifyController.class);

	@Autowired
	private UserService userService;

	@Autowired
	private VerifyService verifyService;

	/**
	 * 我的申请-初始化
	 * 
	 * @param loginForm 登录表单
	 * @return
	 */
	@RequestMapping(value = "/verify/my", method = RequestMethod.POST)
	public Result<Object> verifyInit(Long userId) {
		try {
			User user = userService.getUserById(userId);

			List<ClaimingExpenses> claimingExpensesList = verifyService.getClaimingExpensesList(user);

			return new Result<>(SysStatusCodeConst.SUCCESS, claimingExpensesList);
		} catch (NullPointerException e) {
			return new Result<>(SysStatusCodeConst.SYSERROR);
		} catch (Exception e) {
			logger.error("检索我的申请失败", e);
			throw new RuntimeException(e);
		}
	}
	
	/**
	 * 我的申请详情-初始化
	 * 
	 * @param loginForm 登录表单
	 * @return
	 */
	@RequestMapping(value = "/verify/init", method = RequestMethod.POST)
	public Result<Object> applyInit(Long id) {
		try {
			Map<String, Object> claimingExpenses= verifyService.getAppliocationDetail(id);
			return new Result<>(SysStatusCodeConst.SUCCESS, claimingExpenses);
		} catch (NullPointerException e) {
			return new Result<>(SysStatusCodeConst.SYSERROR);
		} catch (Exception e) {
			logger.error("检索我的申请详情失败", e);
			throw new RuntimeException(e);
		}
	}
}
