package com.isolver.controller.wechat;

import java.sql.Date;
import java.util.Calendar;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.isolver.common.constant.SysStatusCodeConst;
import com.isolver.common.util.Result;
import com.isolver.dto.wechat.WechatServicePerformanceDto;
import com.isolver.entity.User;
import com.isolver.service.UserService;
import com.isolver.service.wechat.WechatServicePerformanceService;

@RestController
@RequestMapping(value = "/weixin")
public class WechatServicePerformanceController {

	private static final Logger logger = LoggerFactory.getLogger(WechatServicePerformanceController.class);

	@Autowired
	private UserService userService;
	@Autowired
	private WechatServicePerformanceService servicePerformanceService;

	@SuppressWarnings("deprecation")
	@RequestMapping(value = "/servicePerformance", method = RequestMethod.POST)
	public Result<Object> searchSP(Long id, Integer oaYear, Integer oaMonth) {
		try {
//			String workId = AuthenticationFacade.getUsername();
			User user = userService.getUserById(id);

			Calendar cal = Calendar.getInstance();
			cal.set(Calendar.MONTH, oaMonth - 1);
			cal.set(Calendar.YEAR, oaYear);
			int firstDay = cal.getMinimum(Calendar.DATE);
			int lastDay = cal.getActualMaximum(Calendar.DATE);
			Date dateStart = new Date(oaYear - 1900, oaMonth - 1, firstDay);
			Date dateEnd = new Date(oaYear - 1900, oaMonth - 1, lastDay);
			Map<String, Object> dtoList = servicePerformanceService.findServicePerformance(user, dateStart, dateEnd);

			return new Result<Object>(SysStatusCodeConst.SUCCESS, dtoList);
		} catch (NullPointerException e) {
			return new Result<>(SysStatusCodeConst.SYSERROR);
		} catch (Exception e) {
			logger.error("查询失败", e);
			throw new RuntimeException(e);
		}
	}

	@RequestMapping(value = "/servicePerformanceDetail", method = RequestMethod.POST)
	public Result<Object> getOneDetail(Long id, Long user) {
		try {
			User userEntity = userService.getUserById(user);

			WechatServicePerformanceDto spDto = servicePerformanceService.findOneServicePerformanceByIdAndUser(id, userEntity);
			return new Result<Object>(SysStatusCodeConst.SUCCESS, spDto);
		} catch (NullPointerException e) {
			return new Result<>(SysStatusCodeConst.SYSERROR);
		} catch (Exception e) {
			logger.error("查询失败", e);
			throw new RuntimeException(e);
		}
	}

}
