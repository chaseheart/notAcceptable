package com.isolver.dao.workOvertime;

import java.sql.Timestamp;
import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import com.isolver.dto.ApplicationDto;
import com.isolver.dto.PendingDto;
import com.isolver.entity.RuFlow;
import com.isolver.entity.User;
import com.isolver.entity.WorkOvertime;

/**
 * @author IS1907005
 * @date 2019/11/08
 * @class HolidayRepository.java
 */
@Repository
public interface WorkOvertimeRepository extends JpaRepository<WorkOvertime, Long> {
	/**
	 * 检索自己提出的所有申请
	 * 
	 * @param startTime
	 * @param endTime
	 * @return
	 */
	@Query("select new com.isolver.dto.ApplicationDto(CONCAT(a.ruFlow.id,'' )as appId, " + " CONCAT(a.workOvertimeStart,'' ) as appStart, CONCAT(a.workOvertimeEnd,'' ) as appEnd,"
			+ " CONCAT(a.ruFlow.dealPeople.username,'' ) as assigner,  CONCAT(a.workContent,'' ) as content )" + " from WorkOvertime a where a.workOvertimeStart Between :startTime and :endTime")
	public List<ApplicationDto> findApplicationDtoByWorkOvertimeStartBetween(Timestamp startTime, Timestamp endTime);

	/**
	 * 检索所有待处理申请
	 * 
	 * @param dealPeople
	 * @param deleteFlag
	 * @return
	 */
	@Query("select new com.isolver.dto.PendingDto(CONCAT(a.ruFlow.id,'' )as appId, "
			+ " CONCAT(a.user.username,'' ) as appUsername, CONCAT(a.ruFlow.insertTime,'' ) as appStartTime, CONCAT(a.ruFlow.dealPeopleNow.username,'' ) as dealPeople, "
			+ " CONCAT(a.ruFlow.updateTime,'' ) as appEndtTime )" + " from WorkOvertime a where a.ruFlow.dealPeople= :dealPeople and a.ruFlow.deleteFlag = :deleteFlag")
	public List<PendingDto> findApplicationDtoByUndo(User dealPeople, Boolean deleteFlag);

	/**
	 * 根据运行流程申请ID检索 休假申请详情
	 * 
	 * @param ruFlow
	 * @return
	 */
	public WorkOvertime findByRuFlow(RuFlow ruFlow);
}
