package com.isolver.controller.sys;

import java.util.List;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.isolver.common.config.AuthenticationFacade;
import com.isolver.common.util.JsonUtil;
import com.isolver.common.util.Result;
import com.isolver.dto.OrgDto;
import com.isolver.service.OrganizationService;
import com.isolver.service.wechat.NewsService;

/**
 * @author IS1907005
 * @date 2019/11/29
 * @class OrgManageController.java
 */
@RestController
@RequestMapping(value = "/newsManage")
public class NewsManageController {

	@Autowired
	private NewsService newsService;

	/**
	 * 通知页面初期化
	 * 
	 * @param id
	 * @return
	 */
	@RequestMapping(value = "/index", method = RequestMethod.GET)
	public ModelAndView indexView() {
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.setViewName("system/news");
		modelAndView.addObject("dataList", JsonUtil.objectToJSON(newsService.searchNotice(StringUtils.EMPTY, StringUtils.EMPTY)));
		return modelAndView;
	}

	/**
	 * 检索
	 * 
	 * @param content 内容
	 * @param type    类型
	 * @return
	 */
	@RequestMapping(value = "/searchData", method = RequestMethod.POST)
	public Result<Object> searchData(String content, String type) {
		return new Result<>(newsService.searchNotice(content, type));
	}

	/**
	 * 通知详情页面初始化
	 * @param id 通知记录id
	 * @return
	 */
	@RequestMapping(value = "/detailView", method = RequestMethod.GET)
	public ModelAndView detailView(String id) {
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.setViewName("system/newsDetail");
		modelAndView.addObject("detail", newsService.getPCNewsDetail(Long.parseLong(id)));
		return modelAndView;
	}

	/**
	 * 删除一条新闻
	 * 
	 * @return
	 */
	@RequestMapping(value = "/deleteNews", method = RequestMethod.POST)
	public Result<Object> deleteDepart(Long newsId) {
		Long userId = AuthenticationFacade.getUserId();
		return newsService.deleteNews(newsId, userId);
	}
}
