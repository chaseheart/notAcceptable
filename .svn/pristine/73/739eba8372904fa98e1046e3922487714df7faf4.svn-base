package com.isolver.service.wechat;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.isolver.common.constant.SysStaticConst;
import com.isolver.common.constant.SysStatusCodeConst;
import com.isolver.common.util.Encodeutil;
import com.isolver.common.util.Result;
import com.isolver.dao.user.UserRepository;
import com.isolver.dao.wechat.LoginRepository;
import com.isolver.dto.wechat.LoginDto;
import com.isolver.entity.User;
import com.isolver.form.wechat.PasswordForm;


@Service
public class LoginService {

	@Autowired
	private LoginRepository loginRepository;
	
	@Autowired
	private UserRepository userRepository;
	

	/**
	 * 登录
	 * 
	 * @param phone
	 * @param password
	 * @return登录
	 */
	public LoginDto getByLoginIdAndPassword(String username, String password) {
		// 登录flag
		password = Encodeutil.MD5Util(username + password);
		LoginDto loginDto = loginRepository.getByLoginIdAndPassword(password, username, SysStaticConst.NOTDELE);
		return loginDto;
	}
	
	/**
	 * 登录
	 * 
	 * @param phone
	 * @param password
	 * @return登录
	 */
	public Result<Object> resetPwd(PasswordForm passwordForm) {
		User user = userRepository.findOne(Long.parseLong(passwordForm.getId()));
		String password = Encodeutil.MD5Util(user.getWorkId() + passwordForm.getOriginPassword());
		if(password.equals(user.getPassword())) {
			User entity = new User();
			BeanUtils.copyProperties(user, entity);
			password = Encodeutil.MD5Util(user.getWorkId() + passwordForm.getNewPassword());
			entity.setPassword(password);
			userRepository.save(entity);
			return new Result<>(SysStatusCodeConst.SUCCESS);
		}
		return new Result<>(SysStatusCodeConst.NODATA);
	}

}
